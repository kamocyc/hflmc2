(declare-const v_0 Int)
(declare-const v_1 Int)
(declare-const v_2 Int)
(declare-const v_3 Int)
(declare-const v_4 Int)
(declare-const v_5 Int)

  (define-fun X2
    ( (v_0 Int) (v_1 Int) (v_2 Int) (v_3 Int) (v_4 Int) (v_5 Int) ) Bool
    (and
      (or
        (and
          (>= v_0 0)
          (= v_1 0)
          (= v_2 0)
          (>= (+ v_5 (* (- 1) v_3)) 1)
          (>= (+ v_5 (* v_0 (- 1))) 1)
          (>= (+ v_5 v_3) 1)
          (>= (+ v_4 (* (- 1) v_0) (* v_2 (- 1))) 2))
        (and
          (>= v_0 0)
          (>= (+ v_5 (* (- 1) v_0)) 1)
          (>= v_4 3)
          (>= (+ v_4 v_0 (* (- 1) v_1)) 2)
          (>= (+ v_4 (* (- 1) v_0) (* (- 1) v_2)) 2)
        )
      )
      (>= v_5 1)
    )
  )
  (define-fun X3
    ( (v_0 Int) (v_1 Int) (v_2 Int) (v_3 Int) (v_4 Int) (v_5 Int) ) Bool
    (and (or (and (>= v_5 1) (>= v_0 0) (= v_1 0) (= v_2 0) (>= (+ v_5 (* (- 1) v_3)) 1) (>= (+ v_5 (* (- 1) v_0)) 1) (>= (+ v_5 v_3) 1) (>= (+ v_4 v_0 (* (- 1) v_1)) 2) (>= (+ v_4 (* (- 1) v_0) (* (- 1) v_2)) 2)) (and (>= v_0 0) (>= (+ v_5 (* (- 1) v_0)) 1) (>= v_4 3) (or (>= (* (- 1) v_5) 0) (not (= v_1 0)) (not (= v_2 0)) (>= (+ v_0 (* (- 1) v_5)) 0) (>= (* (- 1) v_0) 1) (>= (+ v_3 (* (- 1) v_5)) 0) (>= (+ (* (- 1) v_5) (* (- 1) v_3)) 0)) (>= (+ v_4 v_0 (* (- 1) v_1)) 2) (>= (+ v_4 (* (- 1) v_0) (* (- 1) v_2)) 2))) (>= v_5 1))
  )

(assert (= (X2 v_0 v_1 v_2 v_3 v_4 v_5) (X3 v_0 v_1 v_2 v_3 v_4 v_5)))
(check-sat)
